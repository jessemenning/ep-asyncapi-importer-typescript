{
   "openapi":"3.0.1",
   "info":{
      "title":"Event Portal Open API",
      "description":"# REST API Concepts\n\nSolace PubSub+ Event Portal provides RESTful APIs that you can use to manage your data in PubSub+ Cloud. The REST APIs\nallow you to model your event-driven architectures from your own client applications.\n\nThe following document describes the public REST APIs available for use in Event Portal 2.0. Please note that Event\nPortal 2.0 is in the Early Access release stage and is available for testing and early user feedback. These APIs are \nsubject to change until they are declared Generally Available. Objects created in this version will not be available in\nEvent Portal 1.0 and are not guaranteed to be persisted if you migrate your Event Portal 1.0 data later when data\nmigration to Event Portal 2.0 is supported.\n\n",
      "version":"2.0.0-ea"
   },
   "servers":[
      {
         "url":"https://api.solace.cloud",
         "description":"Solace PubSub+ Cloud"
      }
   ],
   "security":[
      {
         "APIToken":[

         ]
      }
   ],
   "tags":[
      {
         "name":"Event API Products"
      },
      {
         "name":"Event APIs"
      },
      {
         "name":"States"
      }
   ],
   "paths":{
      "/api/v2/architecture/eventApiProducts":{
         "get":{
            "tags":[
               "Event API Products"
            ],
            "summary":"Retrieves a list of event API products",
            "description":"Use this API to retrieve a list of event API products that match the given parameters.",
            "operationId":"listEventApiProducts",
            "parameters":[
               {
                  "name":"pageSize",
                  "in":"query",
                  "description":"The number of event API products to get per page. Min: 1 Max: 100",
                  "required":false,
                  "schema":{
                     "maximum":100,
                     "minimum":1,
                     "type":"integer",
                     "format":"int32",
                     "default":20
                  }
               },
               {
                  "name":"pageNumber",
                  "in":"query",
                  "description":"The page number to get. Min: 1",
                  "required":false,
                  "schema":{
                     "minimum":1,
                     "type":"integer",
                     "format":"int32",
                     "default":1
                  }
               },
               {
                  "name":"brokerType",
                  "in":"query",
                  "description":"Match only event API products with the given broken type.",
                  "required":false,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "solace",
                        "kafka"
                     ]
                  }
               },
               {
                  "name":"name",
                  "in":"query",
                  "description":"Name of the event API product to match on.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"ids",
                  "in":"query",
                  "description":"Match only event API products with the given IDs separated by commas.",
                  "required":false,
                  "schema":{
                     "uniqueItems":true,
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"applicationDomainId",
                  "in":"query",
                  "description":"Match only event API products in the given application domain.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"applicationDomainIds",
                  "in":"query",
                  "description":"Match only event API products in the given application domains.",
                  "required":false,
                  "schema":{
                     "uniqueItems":true,
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"shared",
                  "in":"query",
                  "description":"Match only with shared or unshared event API products.",
                  "required":false,
                  "schema":{
                     "type":"boolean",
                     "default":true
                  }
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"The name of the field to sort on.",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"Unauthorized.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "503":{
                  "description":"Service Unavailable.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "504":{
                  "description":"Gateway Timeout.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad Request.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "*/*":{
                        "schema":{
                           "oneOf":[
                              {
                                 "$ref":"#/components/schemas/ErrorResponse"
                              },
                              {
                                 "$ref":"#/components/schemas/InvalidStateReference"
                              }
                           ]
                        }
                     }
                  }
               },
               "405":{
                  "description":"Method Not Allowed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "501":{
                  "description":"Not Implemented",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The list of event API products and the accompanying metadata.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EventApiProductsResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/v2/architecture/eventApiProducts/{id}":{
         "get":{
            "tags":[
               "Event API Products"
            ],
            "summary":"Retrieves an event API product",
            "description":"Use this API to retrieve a single event API product by its ID.",
            "operationId":"getEventApiProduct",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the event API product.",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"Unauthorized.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "503":{
                  "description":"Service Unavailable.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "504":{
                  "description":"Gateway Timeout.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad Request.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "*/*":{
                        "schema":{
                           "oneOf":[
                              {
                                 "$ref":"#/components/schemas/ErrorResponse"
                              },
                              {
                                 "$ref":"#/components/schemas/InvalidStateReference"
                              }
                           ]
                        }
                     }
                  }
               },
               "405":{
                  "description":"Method Not Allowed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "501":{
                  "description":"Not Implemented",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The event API product.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EventApiProductResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/v2/architecture/states":{
         "get":{
            "tags":[
               "States"
            ],
            "summary":"Gets the State objects",
            "description":"Use this API to retrieve a list of Lifeycle States that match the given parameters.",
            "operationId":"listStates",
            "responses":{
               "401":{
                  "description":"Unauthorized.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "503":{
                  "description":"Service Unavailable.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "504":{
                  "description":"Gateway Timeout.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad Request.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "*/*":{
                        "schema":{
                           "oneOf":[
                              {
                                 "$ref":"#/components/schemas/ErrorResponse"
                              },
                              {
                                 "$ref":"#/components/schemas/InvalidStateReference"
                              }
                           ]
                        }
                     }
                  }
               },
               "405":{
                  "description":"Method Not Allowed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "501":{
                  "description":"Not Implemented",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "200":{
                  "description":"Retrieve a list of lifecycle states and the accompanying metadata.",
                  "content":{
                     "application/json;charset=UTF-8":{
                        "schema":{
                           "$ref":"#/components/schemas/StatesResponse"
                        }
                     }
                  }
               }
            }
         }
      },
      "/api/v2/architecture/eventApiVersions/{eventApiVersionId}/asyncApi":{
         "get":{
            "tags":[
               "Event APIs"
            ],
            "summary":"Retrieves the AsyncAPI specification for an event API version",
            "description":"Use this API to retrieve the AsyncAPI specification for an event API version.",
            "operationId":"generateEventApiVersionAsyncApiById",
            "parameters":[
               {
                  "name":"eventApiVersionId",
                  "in":"path",
                  "description":"The ID of the event API version.",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"format",
                  "in":"query",
                  "description":"The format in which to retrieve the AsyncAPI specification. Possible values are yaml and json.",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "enum":[
                        "json",
                        "yaml"
                     ],
                     "default":"json"
                  }
               },
               {
                  "name":"version",
                  "in":"query",
                  "description":"The version of AsyncAPI to use. Supported version is 2.0.0.",
                  "required":true,
                  "schema":{
                     "type":"string",
                     "default":"2.0.0"
                  }
               }
            ],
            "responses":{
               "401":{
                  "description":"Unauthorized.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "404":{
                  "description":"Not Found.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "503":{
                  "description":"Service Unavailable.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "504":{
                  "description":"Gateway Timeout.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Bad Request.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     },
                     "*/*":{
                        "schema":{
                           "oneOf":[
                              {
                                 "$ref":"#/components/schemas/ErrorResponse"
                              },
                              {
                                 "$ref":"#/components/schemas/InvalidStateReference"
                              }
                           ]
                        }
                     }
                  }
               },
               "405":{
                  "description":"Method Not Allowed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "501":{
                  "description":"Not Implemented",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorResponse"
                        }
                     }
                  }
               },
               "200":{
                  "description":"The AsyncAPI specification for the event API version.",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object"
                        }
                     },
                     "text/plain":{
                        "schema":{
                           "type":"object"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "AdditionalPolicyPropertiesDTO":{
            "type":"object",
            "anyOf":[
               {
                  "$ref":"#/components/schemas/SolacePolicy"
               }
            ]
         },
         "Address":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "addressLevels":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AddressLevel"
                  }
               },
               "addressType":{
                  "type":"string",
                  "enum":[
                     "topic"
                  ]
               },
               "id":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "AddressLevel":{
            "type":"object",
            "properties":{
               "name":{
                  "type":"string",
                  "example":"root"
               },
               "addressLevelType":{
                  "type":"string",
                  "enum":[
                     "literal",
                     "variable"
                  ]
               },
               "enumVersionId":{
                  "type":"string"
               }
            }
         },
         "Application":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"My First Application"
               },
               "applicationType":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"standard"
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true,
                  "example":3
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "ApplicationDomain":{
            "required":[
               "name"
            ],
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"My First Application Domain"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Application Domain created by the Solace PubSub+ Cloud API documentation"
               },
               "uniqueTopicAddressEnforcementEnabled":{
                  "type":"boolean",
                  "description":"Forces all topic addresses within the application domain to be unique.",
                  "example":true
               },
               "topicDomainEnforcementEnabled":{
                  "type":"boolean",
                  "description":"Forces all topic addresses within the application domain to be prefixed with one of the application domain's configured topic domains.",
                  "example":false
               },
               "stats":{
                  "$ref":"#/components/schemas/ApplicationDomainStats"
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "ApplicationDomainResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/ApplicationDomain"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ApplicationDomainStats":{
            "type":"object",
            "properties":{
               "schemaCount":{
                  "type":"integer",
                  "format":"int32"
               },
               "eventCount":{
                  "type":"integer",
                  "format":"int32"
               },
               "applicationCount":{
                  "type":"integer",
                  "format":"int32"
               },
               "enumCount":{
                  "type":"integer",
                  "format":"int32"
               },
               "eventApiCount":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "readOnly":true
         },
         "ApplicationDomainsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationDomain"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ApplicationResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/Application"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ApplicationVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "applicationId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Application created by Solace PubSub+ Cloud documentation"
               },
               "version":{
                  "type":"string",
                  "example":"1.0.0"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the version"
               },
               "declaredProducedEventVersionIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "declaredConsumedEventVersionIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "stateId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"1"
               },
               "eventMeshIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "consumers":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "$ref":"#/components/schemas/Consumer"
                  }
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "ApplicationVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/ApplicationVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ApplicationVersionsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ApplicationVersion"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ApplicationsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Application"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "AttractingApplicationVersionTuple":{
            "type":"object",
            "properties":{
               "applicationVersionId":{
                  "type":"string"
               },
               "eventMeshIds":{
                  "uniqueItems":true,
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            },
            "readOnly":true
         },
         "BaseMessagingServiceDTO":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"ID value of the object",
                  "readOnly":true,
                  "example":"123456"
               },
               "messagingServiceId":{
                  "type":"string",
                  "description":"ID of the Event Portal messaging service",
                  "readOnly":true,
                  "example":"456789"
               },
               "supportedProtocols":{
                  "type":"array",
                  "description":"Values for allowed supported protocols",
                  "items":{
                     "type":"string",
                     "description":"Values for allowed supported protocols"
                  }
               },
               "environmentId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "environmentName":{
                  "type":"string",
                  "readOnly":true,
                  "example":"Production"
               },
               "eventMeshId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2y"
               },
               "eventMeshName":{
                  "type":"string",
                  "readOnly":true,
                  "example":"US East Mesh"
               },
               "type":{
                  "type":"string"
               }
            },
            "anyOf":[
               {
                  "$ref":"#/components/schemas/SolaceMessagingService"
               }
            ]
         },
         "Consumer":{
            "required":[
               "applicationVersionId"
            ],
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"My First Consumer"
               },
               "applicationVersionId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "brokerType":{
                  "type":"string",
                  "example":"solace"
               },
               "consumerType":{
                  "type":"string",
                  "example":"eventQueue"
               },
               "type":{
                  "type":"string"
               }
            },
            "readOnly":true
         },
         "ConsumerResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/Consumer"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ConsumersResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Consumer"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "DeliveryDescriptor":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "brokerType":{
                  "type":"string"
               },
               "address":{
                  "$ref":"#/components/schemas/Address"
               },
               "keySchemaVersionId":{
                  "type":"string",
                  "example":"shb3mlyec2g"
               },
               "keySchemaPrimitiveType":{
                  "type":"string",
                  "example":"BYTES",
                  "enum":[
                     "BOOLEAN",
                     "BYTES",
                     "DOUBLE",
                     "FLOAT",
                     "INT",
                     "LONG",
                     "NULL",
                     "NUMBER",
                     "STRING"
                  ]
               },
               "id":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "Enum":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"12345678"
               },
               "name":{
                  "maxLength":255,
                  "type":"string",
                  "example":"My First Enum"
               },
               "shared":{
                  "type":"boolean",
                  "example":false
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true
               },
               "eventVersionRefCount":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "EnumResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/Enum"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EnumValue":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "enumVersionId":{
                  "type":"string",
                  "example":"xyz23mwec2g"
               },
               "value":{
                  "maxLength":255,
                  "type":"string",
                  "example":"Ontario"
               },
               "label":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the value"
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "EnumVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "enumId":{
                  "type":"string",
                  "example":"xyz23mwec2g"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Enum created by Solace PubSub+ Cloud API documentation"
               },
               "version":{
                  "type":"string",
                  "example":"1.0.0"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the version"
               },
               "values":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EnumValue"
                  }
               },
               "referencedByEventVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true
                  }
               },
               "referencedByTopicDomainIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true
                  }
               },
               "stateId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"1"
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "EnumVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EnumVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EnumVersionsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EnumVersion"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EnumsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Enum"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "Environment":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz123abc"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"Staging environment"
               },
               "description":{
                  "maxLength":10000,
                  "minLength":1,
                  "type":"string",
                  "example":"The description of my environment"
               },
               "revision":{
                  "type":"integer",
                  "format":"int32"
               },
               "numberOfEventMeshes":{
                  "type":"integer",
                  "format":"int32"
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "EnvironmentResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/Environment"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EnvironmentsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Environment"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "ErrorResponse":{
            "type":"object",
            "properties":{
               "message":{
                  "type":"string",
                  "example":"An error occurred"
               },
               "errorId":{
                  "type":"string",
                  "example":"123e4567-e89b-12d3-a456-426655440000"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object",
                     "example":"'object': { 'field': 'description' }"
                  },
                  "example":"'object': { 'field': 'description' }"
               },
               "validationDetails":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"array",
                     "example":"'name': ['Not unique']",
                     "items":{
                        "type":"string",
                        "example":"'name': ['Not unique']"
                     }
                  },
                  "example":"'name': ['Not unique']"
               },
               "errorType":{
                  "type":"string",
                  "writeOnly":true
               }
            },
            "discriminator":{
               "propertyName":"errorType"
            }
         },
         "Event":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "example":"My First Event"
               },
               "shared":{
                  "type":"boolean",
                  "example":false
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "EventApi":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "description":"Primary key set by the server.",
                  "readOnly":true,
                  "example":"12345"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "description":"The name of the event api.",
                  "example":"Apitest"
               },
               "shared":{
                  "type":"boolean",
                  "example":true
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true,
                  "example":3
               },
               "type":{
                  "type":"string",
                  "description":"The type of this payload, eventApi.",
                  "readOnly":true
               }
            }
         },
         "EventApiProduct":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "description":"Primary key set by the server",
                  "readOnly":true,
                  "example":"12345"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "description":"The name of the event API product",
                  "example":"EventApiProductTest"
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"abcappdomainid"
               },
               "shared":{
                  "type":"boolean",
                  "example":true
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true,
                  "example":3
               },
               "brokerType":{
                  "type":"string",
                  "description":"Broker type of the event API product",
                  "enum":[
                     "solace",
                     "kafka"
                  ],
                  "default":"solace"
               },
               "type":{
                  "type":"string",
                  "description":"The type of payload",
                  "readOnly":true
               }
            }
         },
         "EventApiProductResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EventApiProduct"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiProductVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "eventApiProductId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Event API product created by Solace PubSub+ Cloud documentation"
               },
               "version":{
                  "type":"string",
                  "example":"1.0.0"
               },
               "summary":{
                  "type":"string",
                  "example":"Summary string value of event API product version"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the event API product version"
               },
               "eventApiVersionIds":{
                  "type":"array",
                  "description":"List of IDs of associated event API versions",
                  "items":{
                     "type":"string",
                     "description":"List of IDs of associated event API versions"
                  }
               },
               "stateId":{
                  "type":"string",
                  "example":"1"
               },
               "plans":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Plan"
                  }
               },
               "gatewayMessagingServices":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/BaseMessagingServiceDTO"
                  }
               },
               "type":{
                  "type":"string",
                  "description":"The type of payload",
                  "readOnly":true
               }
            }
         },
         "EventApiProductVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EventApiProductVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiProductVersionsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EventApiProductVersion"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiProductsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EventApiProduct"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EventApi"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/eventApiVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApiVersionsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/eventApiVersion"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventApisResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EventApi"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventMesh":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "description":"Primary key set by the server.",
                  "readOnly":true,
                  "example":"12345"
               },
               "name":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "description":"The name of the event mesh.",
                  "example":"Inventory"
               },
               "environmentId":{
                  "maxLength":255,
                  "minLength":1,
                  "type":"string",
                  "description":"The environmentId of the Event Mesh",
                  "example":"67890"
               },
               "description":{
                  "maxLength":10000,
                  "minLength":1,
                  "type":"string",
                  "description":"The description of the event mesh.",
                  "example":"The Inventory Event Meshapplications."
               },
               "brokerType":{
                  "type":"string",
                  "description":"The type of the broker used in the event mesh.",
                  "enum":[
                     "kafka",
                     "solace"
                  ]
               },
               "applicationVersionIds":{
                  "type":"array",
                  "description":"The list of application version ids using this event mesh. Can only be set with a PATCH, not a POST.",
                  "items":{
                     "type":"string",
                     "description":"The list of application version ids using this event mesh. Can only be set with a PATCH, not a POST."
                  }
               },
               "type":{
                  "type":"string",
                  "description":"The type of this payload, eventMesh.",
                  "readOnly":true
               }
            }
         },
         "EventMeshResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EventMesh"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventMeshesResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EventMesh"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/Event"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "eventId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Event version created by Solace PubSub+ Cloud documentation"
               },
               "version":{
                  "type":"string",
                  "example":"1.0.0"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the version"
               },
               "declaredProducingApplicationVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true,
                     "enum":[
                        "sm32k251k4",
                        "xh2k525k2k"
                     ]
                  },
                  "enum":[
                     "sm32k251k4",
                     "xh2k525k2k"
                  ]
               },
               "declaredConsumingApplicationVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true,
                     "enum":[
                        "sm32k251k4",
                        "xh2k525k2k"
                     ]
                  },
                  "enum":[
                     "sm32k251k4",
                     "xh2k525k2k"
                  ]
               },
               "producingEventApiVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true,
                     "enum":[
                        "sm32k251k4",
                        "xh2k525k2k"
                     ]
                  },
                  "enum":[
                     "sm32k251k4",
                     "xh2k525k2k"
                  ]
               },
               "consumingEventApiVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true,
                     "enum":[
                        "sm32k251k4",
                        "xh2k525k2k"
                     ]
                  },
                  "enum":[
                     "sm32k251k4",
                     "xh2k525k2k"
                  ]
               },
               "attractingApplicationVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "$ref":"#/components/schemas/AttractingApplicationVersionTuple"
                  }
               },
               "schemaVersionId":{
                  "type":"string",
                  "example":"shb3mlyec2g"
               },
               "schemaPrimitiveType":{
                  "type":"string",
                  "example":"BYTES",
                  "enum":[
                     "BOOLEAN",
                     "BYTES",
                     "DOUBLE",
                     "FLOAT",
                     "INT",
                     "LONG",
                     "NULL",
                     "NUMBER",
                     "STRING"
                  ]
               },
               "deliveryDescriptor":{
                  "$ref":"#/components/schemas/DeliveryDescriptor"
               },
               "stateId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"1"
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "EventVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/EventVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventVersionsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/EventVersion"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "EventsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Event"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "InvalidNonStateReference":{
            "type":"object",
            "properties":{
               "entityId":{
                  "type":"string"
               },
               "entityType":{
                  "type":"string"
               }
            }
         },
         "InvalidStateReference":{
            "type":"object",
            "allOf":[
               {
                  "$ref":"#/components/schemas/ErrorResponse"
               },
               {
                  "type":"object",
                  "properties":{
                     "targetStateId":{
                        "type":"string"
                     },
                     "inboundInvalidNonStateReferences":{
                        "type":"array",
                        "items":{
                           "$ref":"#/components/schemas/InvalidNonStateReference"
                        }
                     },
                     "inboundInvalidStateReferences":{
                        "type":"array",
                        "items":{
                           "$ref":"#/components/schemas/InvalidStateReference"
                        }
                     },
                     "outboundInvalidStateReferences":{
                        "type":"array",
                        "items":{
                           "$ref":"#/components/schemas/InvalidStateReference"
                        }
                     },
                     "errorType":{
                        "type":"string"
                     }
                  }
               }
            ]
         },
         "Plan":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"ID value of the object",
                  "readOnly":true,
                  "example":"123456"
               },
               "name":{
                  "type":"string",
                  "description":"Title of the object",
                  "example":"Gold"
               },
               "policies":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/PolicyDTO"
                  }
               },
               "type":{
                  "type":"string",
                  "description":"The type of this payload",
                  "readOnly":true
               }
            }
         },
         "PolicyDTO":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"ID value of the object",
                  "readOnly":true,
                  "example":"123456"
               },
               "type":{
                  "type":"string",
                  "description":"Type of this policy"
               },
               "additionalPolicyProperties":{
                  "$ref":"#/components/schemas/AdditionalPolicyPropertiesDTO"
               }
            }
         },
         "SchemaObject":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"12345678"
               },
               "name":{
                  "maxLength":255,
                  "type":"string",
                  "example":"My First Schema"
               },
               "shared":{
                  "type":"boolean",
                  "example":false
               },
               "contentType":{
                  "maxLength":255,
                  "type":"string",
                  "example":"json"
               },
               "schemaType":{
                  "maxLength":255,
                  "type":"string",
                  "example":"jsonSchema"
               },
               "numberOfVersions":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true
               },
               "eventVersionRefCount":{
                  "type":"integer",
                  "format":"int32",
                  "readOnly":true
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "SchemaResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/SchemaObject"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "SchemaVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "schemaId":{
                  "type":"string",
                  "example":"12345678"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Schema created by Solace PubSub+ Cloud API documentation"
               },
               "version":{
                  "pattern":"^\\d+\\.\\d+\\.\\d+$",
                  "type":"string",
                  "example":"1.0.0"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the version"
               },
               "content":{
                  "type":"string",
                  "example":"{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"$id\": \"http://example.com/root.json\",\"type\": \"object\", \"title\": \"An example schema\", \"required\": [ \"attribute\", ], \"properties\": { \"attribute\": { \"$id\": \"#/properties/attribute\", \"type\": \"string\", \"title\": \"An example of a string based attribute\", \"examples\": [ \"aValue\" ], \"pattern\": \"^(.*)$\" } }}"
               },
               "referencedByEventVersionIds":{
                  "type":"array",
                  "readOnly":true,
                  "items":{
                     "type":"string",
                     "readOnly":true
                  }
               },
               "stateId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"1"
               },
               "type":{
                  "type":"string",
                  "readOnly":true
               }
            }
         },
         "SchemaVersionResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/SchemaVersion"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "SchemasResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/SchemaObject"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "SolaceMessagingService":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string",
                  "description":"ID value of the object",
                  "readOnly":true,
                  "example":"123456"
               },
               "messagingServiceId":{
                  "type":"string",
                  "description":"ID of the Event Portal messaging service",
                  "readOnly":true,
                  "example":"456789"
               },
               "supportedProtocols":{
                  "type":"array",
                  "description":"Values for allowed supported protocols",
                  "items":{
                     "type":"string",
                     "description":"Values for allowed supported protocols"
                  }
               },
               "environmentId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "environmentName":{
                  "type":"string",
                  "readOnly":true,
                  "example":"Production"
               },
               "eventMeshId":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2y"
               },
               "eventMeshName":{
                  "type":"string",
                  "readOnly":true,
                  "example":"US East Mesh"
               },
               "solaceCloudMessagingServiceId":{
                  "type":"string",
                  "example":"service123"
               },
               "type":{
                  "type":"string",
                  "description":"The type of payload",
                  "readOnly":true,
                  "default":"solaceManagedMessagingService"
               }
            }
         },
         "SolacePolicy":{
            "type":"object",
            "properties":{
               "guaranteedMessaging":{
                  "type":"boolean",
                  "description":"Toggles between the use of a queue and direct messaging.",
                  "example":false
               },
               "accessType":{
                  "type":"string",
                  "enum":[
                     "exclusive",
                     "non-exclusive"
                  ]
               },
               "maximumTimeToLive":{
                  "type":"integer",
                  "description":"Duration in seconds of how long a message can live in a queue",
                  "format":"int32",
                  "example":1500
               },
               "queuePerEventApi":{
                  "type":"boolean",
                  "description":"Toggles between one or more queues for each event API version in the current event API product version",
                  "example":false
               },
               "spoolSize":{
                  "type":"integer",
                  "description":"Total number of MBs available for the queue to use",
                  "format":"int32",
                  "example":5
               },
               "type":{
                  "type":"string",
                  "description":"The type of this payload",
                  "readOnly":true,
                  "default":"solaceClassOfServicePolicy"
               }
            }
         },
         "StateDTO":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "stateOrder":{
                  "type":"integer",
                  "format":"int32"
               },
               "type":{
                  "type":"string"
               }
            }
         },
         "StatesResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/StateDTO"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "TopicDomain":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "applicationDomainId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "brokerType":{
                  "type":"string",
                  "example":"solace"
               },
               "addressLevels":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AddressLevel"
                  }
               },
               "type":{
                  "type":"string",
                  "readOnly":true,
                  "example":"topicDomain"
               }
            }
         },
         "TopicDomainResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "$ref":"#/components/schemas/TopicDomain"
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "TopicDomainsResponse":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/TopicDomain"
                  }
               },
               "meta":{
                  "type":"object",
                  "additionalProperties":{
                     "type":"object"
                  }
               }
            }
         },
         "VersionedObjectStateChangeRequest":{
            "type":"object",
            "properties":{
               "stateId":{
                  "type":"string",
                  "example":"1"
               }
            }
         },
         "eventApiVersion":{
            "type":"object",
            "properties":{
               "createdTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "updatedTime":{
                  "type":"string",
                  "readOnly":true,
                  "example":"2021-12-31T20:30:57.920Z"
               },
               "createdBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "changedBy":{
                  "type":"string",
                  "readOnly":true,
                  "example":"12345678"
               },
               "id":{
                  "type":"string",
                  "readOnly":true,
                  "example":"xyz23mwec2g"
               },
               "eventApiId":{
                  "type":"string",
                  "example":"acb2j5k3mly"
               },
               "description":{
                  "maxLength":10000,
                  "type":"string",
                  "example":"Event Api created by Solace PubSub+ Cloud documentation"
               },
               "version":{
                  "type":"string",
                  "example":"1.0.0"
               },
               "displayName":{
                  "maxLength":40,
                  "type":"string",
                  "example":"Display name for the eventApi version"
               },
               "producedEventVersionIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "consumedEventVersionIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "declaredEventApiProductVersionIds":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "enum":[
                        "12345678",
                        "23456789"
                     ]
                  },
                  "enum":[
                     "12345678",
                     "23456789"
                  ]
               },
               "stateId":{
                  "type":"string",
                  "example":"1"
               },
               "type":{
                  "type":"string"
               }
            }
         }
      },
      "securitySchemes":{
         "APIToken":{
            "type":"http",
            "scheme":"bearer",
            "bearerFormat":"JWT"
         }
      }
   }
}
